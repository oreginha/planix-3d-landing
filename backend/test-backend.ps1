# üß™ Script de Prueba del Backend Planix

Write-Host "üöÄ Probando Backend Planix..." -ForegroundColor Green

# Probar endpoint de salud
Write-Host "`nüìä Probando endpoint de salud..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:3001/health" -Method GET
    Write-Host "‚úÖ Health Check: OK" -ForegroundColor Green
    Write-Host "   Mensaje: $($response.message)" -ForegroundColor Cyan
    Write-Host "   Versi√≥n: $($response.data.version)" -ForegroundColor Cyan
    Write-Host "   Entorno: $($response.data.environment)" -ForegroundColor Cyan
    Write-Host "   Modo Test: $($response.data.testMode)" -ForegroundColor Cyan
}
catch {
    Write-Host "‚ùå Error en Health Check: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "   ¬øEst√° ejecut√°ndose el servidor en puerto 3001?" -ForegroundColor Yellow
}

# Probar endpoint de test de email
Write-Host "`nüìß Probando conexi√≥n de email..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:3001/api/contact/test" -Method GET
    if ($response.success) {
        Write-Host "‚úÖ Email Test: OK" -ForegroundColor Green
        Write-Host "   Mensaje: $($response.message)" -ForegroundColor Cyan
    }
    else {
        Write-Host "‚ö†Ô∏è Email Test: Fallo" -ForegroundColor Yellow
        Write-Host "   Mensaje: $($response.message)" -ForegroundColor Yellow
    }
}
catch {
    Write-Host "‚ùå Error en Email Test: $($_.Exception.Message)" -ForegroundColor Red
}

# Probar endpoint de contacto
Write-Host "`nüìù Probando formulario de contacto..." -ForegroundColor Yellow
$testData = @{
    name    = "Usuario Prueba"
    email   = "test@planix.com.ar"
    message = "Este es un mensaje de prueba del nuevo backend Node.js"
    company = "Planix Test"
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "http://localhost:3001/api/contact" -Method POST -Body $testData -ContentType "application/json"
    if ($response.success) {
        Write-Host "‚úÖ Formulario Contacto: OK" -ForegroundColor Green
        Write-Host "   Mensaje: $($response.message)" -ForegroundColor Cyan
        Write-Host "   ID: $($response.data.contactId)" -ForegroundColor Cyan
    }
    else {
        Write-Host "‚ö†Ô∏è Formulario Contacto: Fallo" -ForegroundColor Yellow
        Write-Host "   Error: $($response.error)" -ForegroundColor Yellow
    }
}
catch {
    Write-Host "‚ùå Error en Formulario: $($_.Exception.Message)" -ForegroundColor Red
}

# Probar endpoint de chat
Write-Host "`nüí¨ Probando mensaje de chat..." -ForegroundColor Yellow
$chatData = @{
    userName       = "Usuario Chat"
    userEmail      = "chat@planix.com.ar"
    message        = "¬øCu√°nto cuesta un sitio web?"
    isFirstMessage = $true
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "http://localhost:3001/api/chat/message" -Method POST -Body $chatData -ContentType "application/json"
    if ($response.success) {
        Write-Host "‚úÖ Mensaje Chat: OK" -ForegroundColor Green
        Write-Host "   Mensaje: $($response.message)" -ForegroundColor Cyan
        Write-Host "   ID: $($response.data.messageId)" -ForegroundColor Cyan
    }
    else {
        Write-Host "‚ö†Ô∏è Mensaje Chat: Fallo" -ForegroundColor Yellow
        Write-Host "   Error: $($response.error)" -ForegroundColor Yellow
    }
}
catch {
    Write-Host "‚ùå Error en Chat: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéâ Pruebas completadas!" -ForegroundColor Green
Write-Host "`nüìù Notas:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Si ves errores de email, configura las variables SMTP en .env" -ForegroundColor Gray
Write-Host "   ‚Ä¢ El backend est√° en modo TEST por defecto" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Los emails se env√≠an a TEST_EMAIL configurado" -ForegroundColor Gray
