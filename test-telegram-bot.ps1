# ü§ñ SCRIPT DE PRUEBAS TELEGRAM PARA PLtry {
$body = @{
    try {
        $body = @{
            chat_id = $GROUP_CHAT_ID
            text = "üöÄ Bot de Planix conectado al grupo!`n`nüìä Configuracion:`n‚Ä¢ Token: ‚úÖ Valido`n‚Ä¢ Chat Personal: ‚úÖ $PERSONAL_CHAT_ID`n‚Ä¢ Chat Grupo: ‚úÖ $GROUP_CHAT_ID`n`n‚è∞ $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        } | ConvertTo-Json -Depth 10

        $bodyBytes = [System.Text.Encoding]::UTF8.GetBytes($body)
        $response = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -Method POST -Body $bodyBytes -ContentType "application/json; charset=utf-8"id = $PERSONAL_CHAT_ID
        text = "üéâ Prueba exitosa desde el bot de Planix!`n`n‚è∞ Fecha: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')`nü§ñ Bot funcionando correctamente"
    } | ConvertTo-Json -Depth 10

    $bodyBytes = [System.Text.Encoding]::UTF8.GetBytes($body)
    $response = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -Method POST -Body $bodyBytes -ContentType "application/json; charset=utf-8" ==========================================

    # Configurar UTF-8 encoding para evitar problemas con caracteres especiales
    [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
    $PSDefaultParameterValues['*:Encoding'] = 'utf8'

    Write-Host "ü§ñ PRUEBAS DE TELEGRAM BOT - PLANIX" -ForegroundColor Green
    Write-Host "====================================" -ForegroundColor Green

    # Configuraci√≥n
    $BOT_TOKEN = "7764815323:AAGCxfjiMsaNBpQ0haa70VQ0cWlWcwGmuQM"
    $PERSONAL_CHAT_ID = "6111613750"
    $GROUP_CHAT_ID = "-1002781646438"

    Write-Host "`nüîç PASO 1: VERIFICAR BOT" -ForegroundColor Yellow
    Write-Host "-------------------------" -ForegroundColor Yellow

    try {
        $botInfo = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BOT_TOKEN/getMe"
        if ($botInfo.ok) {
            Write-Host "‚úÖ Bot verificado exitosamente!" -ForegroundColor Green
            Write-Host "   üìã ID: $($botInfo.result.id)" -ForegroundColor Cyan
            Write-Host "   üìã Nombre: $($botInfo.result.first_name)" -ForegroundColor Cyan
            Write-Host "   üìã Username: @$($botInfo.result.username)" -ForegroundColor Cyan
        }
        else {
            Write-Host "‚ùå Error verificando bot: $($botInfo.description)" -ForegroundColor Red
            exit 1
        }
    }
    catch {
        Write-Host "‚ùå Error de conexi√≥n: $($_.Exception.Message)" -ForegroundColor Red
        exit 1
    }

    Write-Host "`nüì® PASO 2: PROBAR ENV√çO A CHAT PERSONAL" -ForegroundColor Yellow
    Write-Host "----------------------------------------" -ForegroundColor Yellow

    try {
        $body = @{
            chat_id = $PERSONAL_CHAT_ID
            text    = "üéâ ¬°Prueba exitosa desde el bot de Planix!`n`n‚è∞ Fecha: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')`nü§ñ Bot funcionando correctamente"
        } | ConvertTo-Json

        $response = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -Method POST -Body $body -ContentType "application/json"
    
        if ($response.ok) {
            Write-Host "‚úÖ Mensaje enviado a tu chat personal!" -ForegroundColor Green
            Write-Host "   üì± Revisa tu Telegram para confirmar" -ForegroundColor Cyan
        }
        else {
            Write-Host "‚ùå Error enviando mensaje personal: $($response.description)" -ForegroundColor Red
        }
    }
    catch {
        Write-Host "‚ùå Error enviando mensaje personal: $($_.Exception.Message)" -ForegroundColor Red
    }

    Write-Host "`nüë• PASO 3: PROBAR ENV√çO AL GRUPO" -ForegroundColor Yellow
    Write-Host "---------------------------------" -ForegroundColor Yellow

    try {
        $body = @{
            chat_id = $GROUP_CHAT_ID
            text    = "üöÄ ¬°Bot de Planix conectado al grupo!`n`nüìä Configuraci√≥n:`n‚Ä¢ Token: ‚úÖ V√°lido`n‚Ä¢ Chat Personal: ‚úÖ $PERSONAL_CHAT_ID`n‚Ä¢ Chat Grupo: ‚úÖ $GROUP_CHAT_ID`n`n‚è∞ $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        } | ConvertTo-Json

        $response = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -Method POST -Body $body -ContentType "application/json"
    
        if ($response.ok) {
            Write-Host "‚úÖ Mensaje enviado al grupo!" -ForegroundColor Green
            Write-Host "   üë• Revisa el grupo para confirmar" -ForegroundColor Cyan
        }
        else {
            Write-Host "‚ùå Error enviando mensaje al grupo: $($response.description)" -ForegroundColor Red
            Write-Host "   üí° Aseg√∫rate de que el bot sea administrador del grupo" -ForegroundColor Yellow
        }
    }
    catch {
        Write-Host "‚ùå Error enviando mensaje al grupo: $($_.Exception.Message)" -ForegroundColor Red
    }

    Write-Host "`nüìã PASO 4: OBTENER INFORMACI√ìN DE WEBHOOKS" -ForegroundColor Yellow
    Write-Host "-------------------------------------------" -ForegroundColor Yellow

    try {
        $webhookInfo = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BOT_TOKEN/getWebhookInfo"
    
        if ($webhookInfo.ok) {
            Write-Host "‚úÖ Informaci√≥n de webhook obtenida:" -ForegroundColor Green
            Write-Host "   üåê URL: $($webhookInfo.result.url)" -ForegroundColor Cyan
            Write-Host "   üìä Pending updates: $($webhookInfo.result.pending_update_count)" -ForegroundColor Cyan
            Write-Host "   üìÖ √öltima actividad: $($webhookInfo.result.last_error_date)" -ForegroundColor Cyan
        }
    }
    catch {
        Write-Host "‚ö†Ô∏è No se pudo obtener informaci√≥n de webhook (normal en desarrollo)" -ForegroundColor Yellow
    }

    Write-Host "`nüéâ RESUMEN DE PRUEBAS" -ForegroundColor Green
    Write-Host "=====================" -ForegroundColor Green
    Write-Host "ü§ñ Bot Token: ‚úÖ V√°lido" -ForegroundColor Green
    Write-Host "üì± Chat Personal: ‚úÖ Configurado ($PERSONAL_CHAT_ID)" -ForegroundColor Green
    Write-Host "üë• Chat Grupo: ‚úÖ Configurado ($GROUP_CHAT_ID)" -ForegroundColor Green
    Write-Host "`nüí° PROXIMOS PASOS:" -ForegroundColor Yellow
    Write-Host "1. Reinicia el backend de Planix" -ForegroundColor White
    Write-Host "2. Verifica que TELEGRAM_ENABLED=true en .env" -ForegroundColor White
    Write-Host "3. Revisa los logs del backend para confirmar conexion" -ForegroundColor White
    Write-Host "`nüöÄ Tu bot de Telegram esta listo para Planix!" -ForegroundColor Green
